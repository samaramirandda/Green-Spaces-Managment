@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class AddEntryAgendaUI {
}

class AddEntryAgendaController {
    +AddEntryAgendaController(agenda, toDoList, authenticationRepository)
    +addEntryAgenda(startingDate, index)
    -getTaskByIndex(index)
    -getGSMFromSession()
    +getTasksListDTO()
}

class Agenda {
    +addEntryAgenda(startingDate, task, gsmFromSession)
    -addEntry(gsmFromSession, entry)
    -validateEntry(entry)
    -validateUser(gsmFromSession, entry)
}

class Entry {
    -Date startingDate
    -Team teamAssign;
    -List<Vehicle> vehiclesAssign;
    +Entry(startingDate, task)
}

class ToDoList {
    +getTaskByIndex(index)
}

class Task {
    -String title
    -String description
    -EmergencyDegree degreeOfUrgency
    -int expectedDuration
    -TaskType type
    -GreenSpace greenSpace
    +Task(title, description, degreeOfUrgency, expectedDuration, type, greenSpace)
    +changeStatus(status)
}

class Repositories{
    - Repositories()
    + getInstance() : Repositories
    + getAgenda()
    + getToDoList()
    + getAuthenticationRepository()
}

enum AgendaStatus {
    PLANNED
    POSTPONED
    CANCELED
    DONE
}

enum TaskStatus {
    PENDING
    PROCESSED
}

class AuthenticationRepository {
    +getCurrentUserSession()
}

class UserSession {
    +getUserId()
}

class GreenSpaceManager {
    -String email
    +GreenSpaceManager(email)
}

class TaskDto {
    -String title
    -String description
    -EmergencyDegree degreeOfUrgency
    -int expectedDuration
    -TaskType type
    -GreenSpace greenSpace
    -TaskStatus status;
    -GreenSpacesManager greenSpacesManager;
    +TaskDto(title, description, degreeOfUrgency, expectedDuration, type, greenSpace, status, greenSpacesManager)
}

class TaskMapper {
    +toDTOList(tasksList)
    +taskToDTO(task)
}

AddEntryAgendaUI ..> AddEntryAgendaController
AddEntryAgendaController ..> Repositories: repositories
AddEntryAgendaController ..> Agenda: agenda
AddEntryAgendaController ..> ToDoList: toDoList
AddEntryAgendaController ..> AuthenticationRepository: authenticationRepository
AuthenticationRepository ..> UserSession
Repositories --> Repositories: instance
Repositories --> "1" Agenda
Repositories --> "1" ToDoList
Repositories --> "1" AuthenticationRepository
Agenda --> "*" Entry
ToDoList --> "*" Task
Entry --> "1" Task
Entry --> "1" AgendaStatus
Task --> "1" TaskStatus
Entry --> "1" GreenSpaceManager
Task --> "1" GreenSpaceManager
AddEntryAgendaController ..> TaskMapper
TaskMapper ..> TaskDto

@enduml