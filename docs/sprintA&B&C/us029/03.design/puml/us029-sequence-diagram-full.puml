@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Collaborator" as COLLABORATOR
participant ":CompleteEntryAgendaUI" as UI
participant ":CompleteEntryAgendaController" as CTRL
participant ":Repositories" as REP
participant "repositories\n:Repositories" as REPS
participant "agenda:\nAgenda" as AGENDA
participant ":EntryMapper" as entryMAPPER
participant "entryDto\n:EntryDto" as entryDTO
participant "entryListDto\n:List<entryDto>" as entryListDTO
participant "authenticationRepository:\nAuthenticationRepository" as authentication
participant "authenticationFacade:\nAuthFacade" as authFacade
participant "user:\nUserSession" as user
participant "entryList:\nEntryList" as entryList
participant "entry:\nEntry" as ENTRY
participant "collaborator:\nCollaborator" as USER

activate COLLABORATOR

    COLLABORATOR -> UI : Asks to complete a entry in the Agenda
    activate UI

        UI -> CTRL** : create

        UI -> CTRL : getEntriesDTO()
        activate CTRL

            CTRL -> REP : getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS : getAgenda()
            activate REPS

            REPS --> CTRL: agenda
            deactivate REPS

            CTRL -> AGENDA: getEntriesList()
            activate AGENDA

            AGENDA --> CTRL : entriesList
            deactivate AGENDA

            CTRL -> entryMAPPER: toDTOList(entriesList)
            activate entryMAPPER

                entryMAPPER -> entryListDTO** : create()

                loop For each entry in entriesList

                entryMAPPER -> entryDTO: entryToDTO(entry)
                activate entryDTO

                entryDTO --> entryMAPPER: entryDto
                deactivate entryDTO

                entryMAPPER -> entryListDTO: add(entryDto)
                activate entryListDTO

                end

                entryListDTO --> entryMAPPER: entriesListDto
                deactivate entryListDTO

            entryMAPPER --> CTRL : entriesListDto
            deactivate entryMAPPER

        CTRL --> UI : entriesListDto
        deactivate CTRL

    UI --> COLLABORATOR : Shows list of entries in the Agenda
    deactivate UI

    COLLABORATOR -> UI : selects a entry
    activate UI

    UI --> COLLABORATOR : shows all data and requests confirmation
    deactivate UI

    COLLABORATOR -> UI : confirms data
    activate UI

        UI -> CTRL: completeEntry(entryIndex)
        activate CTRL

            CTRL -> CTRL: getEntryByIndex(entryIndex)
            activate CTRL

            CTRL -> REP: getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS: getAgenda()
            activate REPS

            REPS --> CTRL: agenda
            deactivate REPS

            CTRL -> AGENDA: getEntryByIndex(entryIndex)
            activate AGENDA

            AGENDA --> CTRL: entry
            deactivate AGENDA

            CTRL --> CTRL: entry
            deactivate CTRL

            CTRL -> CTRL: getEmailCollaboratorFromSession()
            activate CTRL

            CTRL -> REP: getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS: getAuthenticationRepository()
            activate REPS

            REPS --> CTRL: authenticationRepository
            deactivate REPS

            CTRL -> authentication: getCurrentUserSession()
            activate authentication

            authentication --> CTRL: authenticationFacade
            deactivate authentication

            CTRL -> authFacade: getCurrentUserSession()
            activate authFacade

            authFacade --> CTRL: userSession
            deactivate authFacade

            CTRL -> user: getUserId()
            activate user

            user --> CTRL: email
            deactivate user

            CTRL --> CTRL: email
            deactivate CTRL

            CTRL -> REP: getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS: getAgenda()
            activate REPS

            REPS --> CTRL: agenda
            deactivate REPS

            CTRL -> AGENDA: completeEntry(entry, email)
            activate AGENDA

                AGENDA -> ENTRY** : cancel(entry, email)

                AGENDA -> AGENDA: validateEntry (entry)
                activate AGENDA

                AGENDA --> AGENDA
                deactivate AGENDA

                AGENDA -> AGENDA: verifyCollaborator (email, entry)
                activate AGENDA

                    AGENDA -> ENTRY: getTeamAssign()
                    activate ENTRY

                    ENTRY --> AGENDA: teamAssign
                    deactivate ENTRY

                    AGENDA -> USER: getTeam()
                    activate USER

                    USER --> AGENDA: team
                    deactivate USER

                    AGENDA -> USER: getEmail()
                    activate USER

                    USER --> AGENDA: email
                    deactivate USER

                AGENDA --> AGENDA
                deactivate AGENDA

            AGENDA --> CTRL: entry
            deactivate AGENDA

        CTRL --> UI: entry
        deactivate CTRL

    UI --> COLLABORATOR: displays operation success
    deactivate UI

deactivate COLLABORATOR

@enduml