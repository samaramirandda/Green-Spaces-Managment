@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Green Spaces\nManager" as GSM
participant ":AssignTeamUI" as UI
participant ":AssignTeamController" as CTRL
participant ":Repositories" as REP
participant "repositories\n:Repositories" as REPS
participant "agenda:\nAgenda" as agenda
participant ":EntryMapper" as entryMAPPER
participant "entryDto\n:EntryDto" as entryDTO
participant "entriesListDto\n:List<EntryDto>" as entriesListDTO
participant "teamRepository:\nTeamRepository" as teamRepository
participant ":TeamMapper" as teamMAPPER
participant "teamDto\n:TeamDto" as teamDTO
participant "teamListDto\n:List<TeamDto>" as teamListDTO
participant "entry\n:Entry" as ENTRY
participant "authenticationRepository:\nAuthenticationRepository" as authentication
participant "authenticationFacade:\nAuthFacade" as authFacade
participant "user:\nUserSession" as user
participant "collaborator\n:Collaborator" as Collaborator
participant ":EmailService" as emailService
participant ":ApplicationSession" as ApplicationSession
participant ":Email" as email
participant ":DeiService" as deiService
participant "prop:\nProperties" as Properties

activate GSM

    GSM -> UI : asks to assign a team to an entry in the agenda
    activate UI

        UI -> CTRL** : create

        UI -> CTRL : getEntriesListDTO()
        activate CTRL

            CTRL -> REP : getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS : getAgenda()
            activate REPS

            REPS --> CTRL: agenda
            deactivate REPS

            CTRL -> agenda: getEntriesList()
            activate agenda

            agenda --> CTRL : entriesList
            deactivate agenda

            CTRL -> entryMAPPER: toDTOList(entriesList)
            activate entryMAPPER

                entryMAPPER -> entriesListDTO** : create()

                loop For each entry in entriesList

                entryMAPPER -> entryDTO: entryToDTO(entry)
                activate entryDTO

                entryDTO --> entryMAPPER: entryDto
                deactivate entryDTO

                entryMAPPER -> entriesListDTO: add(entryDto)
                activate entriesListDTO

                end

                entriesListDTO --> entryMAPPER: entriesListDto
                deactivate entriesListDTO

            entryMAPPER --> CTRL : entriesListDto
            deactivate entryMAPPER

        CTRL --> UI : entriesListDto
        deactivate CTRL

    UI --> GSM : shows agenda and asks to select an entry
    deactivate UI

    GSM -> UI : selects an entry in the agenda
    activate UI

        UI -> CTRL : getTeamsListDTO()
        activate CTRL

            CTRL -> REP : getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS : getTeamRepository()
            activate REPS

            REPS --> CTRL: teamRepository
            deactivate REPS

            CTRL -> teamRepository: getTeamList()
            activate teamRepository

            teamRepository --> CTRL : teamList
            deactivate teamRepository

            CTRL -> teamMAPPER: toDTOList(teamList)
            activate teamMAPPER

                teamMAPPER -> teamListDTO** : create()

                loop For each team in teamList

                teamMAPPER -> teamDTO: teamToDTO(team)
                activate teamDTO

                teamDTO --> teamMAPPER: teamDto
                deactivate teamDTO

                teamMAPPER -> teamListDTO: add(teamDto)
                activate teamListDTO

                end

                teamListDTO --> teamMAPPER: teamListDto
                deactivate teamListDTO

            teamMAPPER --> CTRL : teamListDto
            deactivate teamMAPPER

        CTRL --> UI : teamListDto
        deactivate CTRL

    UI --> GSM : shows teams list and asks to select one
    deactivate UI

    GSM -> UI : selects a team and assign to the entry in the agenda
    activate UI

    UI --> GSM : shows all data and requests confirmation
    deactivate UI

    GSM -> UI : confirms data
    activate UI

        UI -> CTRL: assignTeamToEntry(agendaIndex, teamIndex)
        activate CTRL

            CTRL -> CTRL: getEntryByIndex(index)
            activate CTRL

            CTRL -> REP: getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS: getAgenda()
            activate REPS

            REPS --> CTRL: agenda
            deactivate REPS

            CTRL -> agenda: getEntryByIndex(index)
            activate agenda

            agenda --> CTRL: entry
            deactivate agenda

            CTRL --> CTRL: entry
            deactivate CTRL

            CTRL -> CTRL: getTeamByIndex(index)
            activate CTRL

            CTRL -> REP: getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS: getTeamRepository()
            activate REPS

            REPS --> CTRL: teamRepository
            deactivate REPS

            CTRL -> teamRepository: getTeamByIndex(index)
            activate teamRepository

            teamRepository --> CTRL: team
            deactivate teamRepository

            CTRL --> CTRL: team
            deactivate CTRL

            CTRL -> ENTRY: assignTeam(team)
            activate ENTRY

            ENTRY --> CTRL: entry
            deactivate ENTRY

            CTRL -> CTRL: getEmailGSMFromSession()
            activate CTRL

            CTRL -> REP: getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS: getAuthenticationRepository()
            activate REPS

            REPS --> CTRL: authenticationRepository
            deactivate REPS

            CTRL -> authentication: getCurrentUserSession()
            activate authentication

            authentication --> CTRL: authenticationFacade
            deactivate authentication

            CTRL -> authFacade: getCurrentUserSession()
            activate authFacade

            authFacade --> CTRL: userSession
            deactivate authFacade

            CTRL -> user: getUserId()
            activate user

            user --> CTRL: email
            deactivate user

            CTRL --> CTRL: email
            deactivate CTRL

            loop For each collaborator in team

                CTRL -> CTRL: sendTheEmailToTeam(gsmEmail, collaboratorEmail, collaboratorName, entry)
                activate CTRL

                    CTRL -> Collaborator: getEmail()
                    activate Collaborator

                    Collaborator --> CTRL: email
                    deactivate Collaborator

                    CTRL -> Collaborator: getName()
                    activate Collaborator

                    Collaborator --> CTRL: name
                    deactivate Collaborator

                CTRL -> emailService: sendToEmailFile(gsmEmail, collaboratorEmail, collaboratorName, entry)
                activate emailService

                    emailService -> ApplicationSession: getEmailService()
                    activate ApplicationSession

                        ApplicationSession -> ApplicationSession: getEmail()
                        activate ApplicationSession

                            ApplicationSession -> Properties: getProperty(key, defaultValue)
                            activate Properties

                            Properties --> ApplicationSession: emailService
                            deactivate Properties

                        ApplicationSession --> ApplicationSession: emailService
                        deactivate ApplicationSession

                        opt Email service is Dei Service

                        ApplicationSession -> deiService: sendEmail(from, to, subject, body)
                        activate deiService

                            deiService -> deiService: writeToFile(file, from, to, subject, body)
                            activate deiService

                            deiService --> deiService:
                            deactivate deiService

                        deiService --> ApplicationSession
                        deactivate deiService

                        end

                    ApplicationSession --> emailService: email
                    deactivate ApplicationSession

                emailService --> CTRL
                deactivate emailService

                CTRL --> CTRL
                deactivate CTRL

            end loop

        CTRL --> UI: entry
        deactivate CTRL

    UI --> GSM: displays operation success
    deactivate UI

deactivate GSM

@enduml